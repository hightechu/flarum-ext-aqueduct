{"version":3,"sources":["webpack://@flagrow/aqueduct/webpack/bootstrap","webpack://@flagrow/aqueduct/external \"flarum.core.compat['Model']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['components/Button']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['utils/ItemList']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['extend']\"","webpack://@flagrow/aqueduct/./node_modules/html5sortable/dist/html.sortable.js","webpack://@flagrow/aqueduct/external \"flarum.core.compat['tags/models/Tag']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['components/SplitDropdown']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['models/Discussion']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['Component']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['components/Page']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['components/Modal']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['tags/helpers/tagLabel']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['tags/helpers/tagIcon']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['helpers/highlight']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['utils/classList']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['helpers/icon']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['helpers/avatar']\"","webpack://@flagrow/aqueduct/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@flagrow/aqueduct/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flagrow/aqueduct/./src/forum/modals/AddColumnModal.js","webpack://@flagrow/aqueduct/./src/forum/components/Card.js","webpack://@flagrow/aqueduct/./src/forum/components/Column.js","webpack://@flagrow/aqueduct/./src/forum/pages/Board.js","webpack://@flagrow/aqueduct/./src/forum/addsBoardToDiscussion.js","webpack://@flagrow/aqueduct/./src/forum/index.js","webpack://@flagrow/aqueduct/./src/forum/routes.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","dragging","draggingHeight","placeholders","sortables","_data","element","h5s","data","_matches","el","selector","matches","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","_filter","nodes","wanted","Array","slice","result","length","push","indexOf","_on","event","callback","addEventListener","events","_off","removeEventListener","_attr","attribute","setAttribute","_removeAttr","removeAttribute","_offset","rect","getClientRects","left","window","scrollX","top","scrollY","_removeItemEvents","items","_removeSortableEvents","sortable","_getGhost","draggedItem","ghost","_makeGhost","x","parseInt","pageX","y","pageY","_addGhostPos","dataTransfer","effectAllowed","setData","setDragImage","_attachGhost","_listsConnected","curList","destList","_getHandles","handle","handles","querySelectorAll","concat","_enableSortable","sortableElement","opts","_getChildren","spanEl","document","createElement","dragDrop","disableIEFix","this","parent","parentElement","_index","children","_attached","parentNode","_after","target","insertBefore","nextElementSibling","_detach","removeChild","_makeEvent","detail","e","createEvent","initEvent","_dispatchEventOnConnected","forEach","dispatchEvent","_serialize","list","sortableElements","options","method","String","connectWith","placeholder","placeholderClass","draggingClass","hoverClass","debounce","maxItems","option","getChildren","Element","test","serialized","_reloadSortable","index","startParent","startList","tagName","html","innerHTML","firstChild","_html2element","classList","add","apply","split","getAttribute","id","remove","stopImmediatePropagation","getComputedStyle","height","item","startparent","newParent","style","display","oldDisplay","oldindex","elementIndex","oldElementIndex","endparent","newEndList","newStartList","oldStartList","visiblePlaceholder","preventDefault","stopPropagation","filter","debouncedDragOverEnter","fn","delay","context","timer","eContext","args","arguments","clearTimeout","setTimeout","_debounce","thisHeight","placeholderIndex","thisIndex","forcePlaceholderSize","deadZone","offsetTop","_before","appendChild","onDragOverEnter","dropEffect","destroy","_removeData","_removeSortableData","_removeItemData","_destroySortable","enable","disable","_disableSortable","_inheritsLoose","subClass","superClass","constructor","__proto__","AddColumnModal","title","app","translator","trans","init","_this","_Modal","for","props","tag","tags","store","all","columns","selected","prop","focused","content","_this2","toLowerCase","position","substr","className","onclick","onready","tagLabel","oninput","withAttr","onfocus","onblur","Button","component","type","disabled","icon","map","data-index","pinned","child","colored","color","active","onmouseover","tagIcon","highlight","description","onsubmit","_this3","board","column","request","url","forum","slug","then","results","pushPayload","modal","close","redraw","strategy","Modal","Card","discussion","isUnread","view","jumpTo","Math","min","lastPostNumber","lastReadPostNumber","href","route","config","footerControls","toArray","ItemList","user","$","tooltip","placement","avatar","username","Component","Column","discussions","loading","draggingEnabled","draggable","sorted","ready","controls","isEmpty","SplitDropdown","buttonClassName","canManageBoard","confirm","delete","canUseBoard","attr","sorting","find","updateDiscussionSorting","_this4","_this5","getBy","getById","relationships","save","Board","_Page","bodyClass","refresh","isInitialized","setTitle","setTitleCount","setDraggable","updateColumnSorting","show","clear","param","sort","a","b","boardSort","load","parseResults","lazyRedraw","_this6","Page","addsBoardToDiscussion","extend","DiscussionPage","isChild","canAccessBoard","initializers","Tag","Model","hasMany","boardMaxItems","Discussion","assignedUsers","assignedGroups","routes","path"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['extend'];",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.sortable = factory();\n  }\n}(this, function() {\n/*\n * HTML5 Sortable library\n * https://github.com/lukasoppermann/html5sortable\n *\n * Original code copyright 2012 Ali Farhadi.\n * This version is mantained by Lukas Oppermann <lukas@vea.re>\n * Previously also mantained by Alexandru Badiu <andu@ctrlz.ro>\n * jQuery-independent implementation by Nazar Mokrynskyi <nazar@mokrynskyi.com>\n *\n * Released under the MIT license.\n */\n'use strict'\n/*\n * variables global to the plugin\n */\nvar dragging\nvar draggingHeight\nvar placeholders = []\nvar sortables = []\n/**\n * Get or set data on element\n * @param {Element} element\n * @param {string} key\n * @param {*} value\n * @return {*}\n */\nvar _data = function (element, key, value) {\n  if (value === undefined) {\n    return element && element.h5s && element.h5s.data && element.h5s.data[key]\n  } else {\n    element.h5s = element.h5s || {}\n    element.h5s.data = element.h5s.data || {}\n    element.h5s.data[key] = value\n  }\n}\n/**\n * Remove data from element\n * @param {Element} element\n */\nvar _removeData = function (element) {\n  if (element.h5s) {\n    delete element.h5s.data\n  }\n}\n/**\n * Tests if an element matches a given selector. Comparable to jQuery's $(el).is('.my-class')\n * @param {el} DOM element\n * @param {selector} selector test against the element\n * @returns {boolean}\n */\n/* istanbul ignore next */\nvar _matches = function (el, selector) {\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector)\n}\n/**\n * Filter only wanted nodes\n * @param {Array|NodeList} nodes\n * @param {Array/string} wanted\n * @returns {Array}\n */\nvar _filter = function (nodes, wanted) {\n  if (!wanted) {\n    return Array.prototype.slice.call(nodes)\n  }\n  var result = []\n  for (var i = 0; i < nodes.length; ++i) {\n    if (typeof wanted === 'string' && _matches(nodes[i], wanted)) {\n      result.push(nodes[i])\n    }\n    if (wanted.indexOf(nodes[i]) !== -1) {\n      result.push(nodes[i])\n    }\n  }\n  return result\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n * @param {Function} callback\n */\nvar _on = function (element, event, callback) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _on(element[i], event, callback)\n    }\n    return\n  }\n  element.addEventListener(event, callback)\n  element.h5s = element.h5s || {}\n  element.h5s.events = element.h5s.events || {}\n  element.h5s.events[event] = callback\n}\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n */\nvar _off = function (element, event) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _off(element[i], event)\n    }\n    return\n  }\n  if (element.h5s && element.h5s.events && element.h5s.events[event]) {\n    element.removeEventListener(event, element.h5s.events[event])\n    delete element.h5s.events[event]\n  }\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n * @param {*} value\n */\nvar _attr = function (element, attribute, value) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _attr(element[i], attribute, value)\n    }\n    return\n  }\n  element.setAttribute(attribute, value)\n}\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n */\nvar _removeAttr = function (element, attribute) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _removeAttr(element[i], attribute)\n    }\n    return\n  }\n  element.removeAttribute(attribute)\n}\n/**\n * @param {Element} element\n * @returns {{left: *, top: *}}\n */\nvar _offset = function (element) {\n  var rect = element.getClientRects()[0]\n  return {\n    left: rect.left + window.scrollX,\n    top: rect.top + window.scrollY\n  }\n}\n/*\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n  _off(items, 'dragstart')\n  _off(items, 'dragend')\n  _off(items, 'selectstart')\n  _off(items, 'dragover')\n  _off(items, 'dragenter')\n  _off(items, 'drop')\n}\n/*\n * Remove event handlers from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableEvents = function (sortable) {\n  _off(sortable, 'dragover')\n  _off(sortable, 'dragenter')\n  _off(sortable, 'drop')\n}\n/*\n * Attach ghost to dataTransfer object\n * @param {Event} original event\n * @param {object} ghost-object with item, x and y coordinates\n */\nvar _attachGhost = function (event, ghost) {\n  // this needs to be set for HTML5 drag & drop to work\n  event.dataTransfer.effectAllowed = 'move'\n  // Firefox requires some arbitrary content in the data in order for\n  // the drag & drop functionality to work\n  event.dataTransfer.setData('text', 'arbitrary-content')\n\n  // check if setDragImage method is available\n  if (event.dataTransfer.setDragImage) {\n    event.dataTransfer.setDragImage(ghost.draggedItem, ghost.x, ghost.y)\n  }\n}\n/**\n * _addGhostPos clones the dragged item and adds it as a Ghost item\n * @param {Event} event - the event fired when dragstart is triggered\n * @param {object} ghost - .draggedItem = Element\n */\nvar _addGhostPos = function (event, ghost) {\n  if (!ghost.x) {\n    ghost.x = parseInt(event.pageX - _offset(ghost.draggedItem).left)\n  }\n  if (!ghost.y) {\n    ghost.y = parseInt(event.pageY - _offset(ghost.draggedItem).top)\n  }\n  return ghost\n}\n/**\n * _makeGhost decides which way to make a ghost and passes it to attachGhost\n * @param {Element} draggedItem - the item that the user drags\n */\nvar _makeGhost = function (draggedItem) {\n  return {\n    draggedItem: draggedItem\n  }\n}\n/**\n * _getGhost constructs ghost and attaches it to dataTransfer\n * @param {Event} event - the original drag event object\n * @param {Element} draggedItem - the item that the user drags\n */\n// TODO: could draggedItem be replaced by event.target in all instances\nvar _getGhost = function (event, draggedItem) {\n  // add ghost item & draggedItem to ghost object\n  var ghost = _makeGhost(draggedItem)\n  // attach ghost position\n  ghost = _addGhostPos(event, ghost)\n  // attach ghost to dataTransfer\n  _attachGhost(event, ghost)\n}\n/*\n * Remove data from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n  _removeData(sortable)\n  _removeAttr(sortable, 'aria-dropeffect')\n}\n/*\n * Remove data from items\n * @param {Array|Element} items\n */\nvar _removeItemData = function (items) {\n  _removeAttr(items, 'aria-grabbed')\n  _removeAttr(items, 'draggable')\n  _removeAttr(items, 'role')\n}\n/*\n * Check if two lists are connected\n * @param {Element} curList\n * @param {Element} destList\n */\nvar _listsConnected = function (curList, destList) {\n  if (curList === destList) {\n    return true\n  }\n  if (_data(curList, 'connectWith') !== undefined) {\n    return _data(curList, 'connectWith') === _data(destList, 'connectWith')\n  }\n  return false\n}\n/*\n * get handle or return item\n * @param {Array} items\n * @param {selector} handle\n */\nvar _getHandles = function (items, handle) {\n  var result = []\n  var handles\n  if (!handle) {\n    return items\n  }\n  for (var i = 0; i < items.length; ++i) {\n    handles = items[i].querySelectorAll(handle)\n    result = result.concat(Array.prototype.slice.call(handles))\n  }\n  return result\n}\n/*\n * Destroy the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts') || {}\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  // remove event handlers & data from sortable\n  _removeSortableEvents(sortableElement)\n  _removeSortableData(sortableElement)\n  // remove event handlers & data from items\n  _off(handles, 'mousedown')\n  _removeItemEvents(items)\n  _removeItemData(items)\n}\n/*\n * Enable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'move')\n  _data(sortableElement, '_disabled', 'false')\n  _attr(handles, 'draggable', 'true')\n  // IE FIX for ghost\n  // can be disabled as it has the side effect that other events\n  // (e.g. click) will be ignored\n  var spanEl = (document || window.document).createElement('span')\n  if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\n    _on(handles, 'mousedown', function () {\n      if (items.indexOf(this) !== -1) {\n        this.dragDrop()\n      } else {\n        var parent = this.parentElement\n        while (items.indexOf(parent) === -1) {\n          parent = parent.parentElement\n        }\n        parent.dragDrop()\n      }\n    })\n  }\n}\n/*\n * Disable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _attr(sortableElement, 'aria-dropeffect', 'none')\n  _data(sortableElement, '_disabled', 'true')\n  _attr(handles, 'draggable', 'false')\n  _off(handles, 'mousedown')\n}\n/*\n * Reload the sortable\n * @param {Element} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n  var opts = _data(sortableElement, 'opts')\n  var items = _filter(_getChildren(sortableElement), opts.items)\n  var handles = _getHandles(items, opts.handle)\n  _data(sortableElement, '_disabled', 'false')\n  // remove event handlers from items\n  _removeItemEvents(items)\n  _off(handles, 'mousedown')\n  // remove event handlers from sortable\n  _removeSortableEvents(sortableElement)\n}\n/**\n * Get position of the element relatively to its sibling elements\n * @param {Element} element\n * @returns {number}\n */\nvar _index = function (element) {\n  if (!element.parentElement) {\n    return 0\n  }\n  return Array.prototype.indexOf.call(element.parentElement.children, element)\n}\n/**\n * Whether element is in DOM\n * @param {Element} element\n * @returns {boolean}\n */\nvar _attached = function (element) {\n  // document.body.contains(element)\n  return !!element.parentNode\n}\n/**\n * Convert HTML string into DOM element.\n * @param {Element|string} html\n * @param {string} tagname\n * @returns {Element}\n */\nvar _html2element = function (html, tagName) {\n  if (typeof html !== 'string') {\n    return html\n  }\n  var parentElement = document.createElement(tagName)\n  parentElement.innerHTML = html\n  return parentElement.firstChild\n}\n/**\n * Insert before target\n * @param {Element} target\n * @param {Element} element\n */\nvar _before = function (target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target\n  )\n}\n/**\n * Insert after target\n * @param {Element} target\n * @param {Element} element\n */\nvar _after = function (target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target.nextElementSibling\n  )\n}\n/**\n * Detach element from DOM\n * @param {Element} element\n */\nvar _detach = function (element) {\n  if (element.parentNode) {\n    element.parentNode.removeChild(element)\n  }\n}\n/**\n * Make native event that can be dispatched afterwards\n * @param {string} name\n * @param {object} detail\n * @returns {CustomEvent}\n */\nvar _makeEvent = function (name, detail) {\n  var e = document.createEvent('Event')\n  if (detail) {\n    e.detail = detail\n  }\n  e.initEvent(name, false, true)\n  return e\n}\n/**\n * @param {Element} sortableElement\n * @param {CustomEvent} event\n */\nvar _dispatchEventOnConnected = function (sortableElement, event) {\n  sortables.forEach(function (target) {\n    if (_listsConnected(sortableElement, target)) {\n      target.dispatchEvent(event)\n    }\n  })\n}\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {fn} Function to debounce\n * @param {delay} time to wait before calling function with latest arguments, 0 - no debounce\n * @param {context} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nfunction _debounce (fn, delay, context) {\n  var timer = null\n\n  if (delay === 0) {\n    return fn\n  }\n  return function () {\n    var eContext = context || this\n    var args = arguments\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      fn.apply(eContext, args)\n    }, delay)\n  }\n}\n\nvar _getChildren = function (element) {\n  return element.children\n}\n\nvar _serialize = function (list) {\n  var children = _filter(_getChildren(list), _data(list, 'items'))\n  return children\n}\n\n/*\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nvar sortable = function (sortableElements, options) {\n  var method = String(options)\n\n  options = (function (options) {\n    var result = {\n      connectWith: false,\n      placeholder: null,\n      disableIEFix: false,\n      placeholderClass: 'sortable-placeholder',\n      draggingClass: 'sortable-dragging',\n      hoverClass: false,\n      debounce: 0,\n      maxItems: 0\n    }\n    for (var option in options) {\n      result[option] = options[option]\n    }\n    return result\n  })(options)\n\n  if (options && typeof options.getChildren === 'function') {\n    _getChildren = options.getChildren\n  }\n\n  if (typeof sortableElements === 'string') {\n    sortableElements = document.querySelectorAll(sortableElements)\n  }\n\n  if (sortableElements instanceof window.Element) {\n    sortableElements = [sortableElements]\n  }\n\n  sortableElements = Array.prototype.slice.call(sortableElements)\n\n  if (/serialize/.test(method)) {\n    var serialized = []\n    sortableElements.forEach(function (sortableElement) {\n      serialized.push({\n        list: sortableElement,\n        children: _serialize(sortableElement)\n      })\n    })\n    return serialized\n  }\n\n  /* TODO: maxstatements should be 25, fix and remove line below */\n  /* jshint maxstatements:false */\n  sortableElements.forEach(function (sortableElement) {\n    if (/enable|disable|destroy/.test(method)) {\n      return sortable[method](sortableElement)\n    }\n\n    // get options & set options on sortable\n    options = _data(sortableElement, 'opts') || options\n    _data(sortableElement, 'opts', options)\n    // reset sortable\n    _reloadSortable(sortableElement)\n    // initialize\n    var items = _filter(_getChildren(sortableElement), options.items)\n    var index\n    var startParent\n    var startList\n    var placeholder = options.placeholder\n    var maxItems\n    if (!placeholder) {\n      placeholder = document.createElement(\n        /^ul|ol$/i.test(sortableElement.tagName) ? 'li' : 'div'\n      )\n    }\n    placeholder = _html2element(placeholder, sortableElement.tagName)\n    placeholder.classList.add.apply(\n      placeholder.classList,\n      options.placeholderClass.split(' ')\n    )\n\n    // setup sortable ids\n    if (!sortableElement.getAttribute('data-sortable-id')) {\n      var id = sortables.length\n      sortables[id] = sortableElement\n      _attr(sortableElement, 'data-sortable-id', id)\n      _attr(items, 'data-item-sortable-id', id)\n    }\n\n    _data(sortableElement, 'items', options.items)\n    placeholders.push(placeholder)\n    if (options.connectWith) {\n      _data(sortableElement, 'connectWith', options.connectWith)\n    }\n\n    _enableSortable(sortableElement)\n    _attr(items, 'role', 'option')\n    _attr(items, 'aria-grabbed', 'false')\n\n    // Mouse over class\n    if (options.hoverClass) {\n      var hoverClass = 'sortable-over'\n      if (typeof options.hoverClass === 'string') {\n        hoverClass = options.hoverClass\n      }\n\n      _on(items, 'mouseenter', function () {\n        this.classList.add(hoverClass)\n      })\n      _on(items, 'mouseleave', function () {\n        this.classList.remove(hoverClass)\n      })\n    }\n\n    // max items\n    if (options.maxItems && typeof options.maxItems === 'number') {\n      maxItems = options.maxItems\n    }\n\n    // Handle drag events on draggable items\n    _on(items, 'dragstart', function (e) {\n      e.stopImmediatePropagation()\n      if ((options.handle && !_matches(e.target, options.handle)) || this.getAttribute('draggable') === 'false') {\n        return\n      }\n\n      // add transparent clone or other ghost to cursor\n      _getGhost(e, this)\n      // cache selsection & add attr for dragging\n      this.classList.add(options.draggingClass)\n      dragging = this\n      _attr(dragging, 'aria-grabbed', 'true')\n      // grab values\n      index = _index(dragging)\n      draggingHeight = parseInt(window.getComputedStyle(dragging).height)\n      startParent = this.parentElement\n      startList = _serialize(startParent)\n      // dispatch sortstart event on each element in group\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstart', {\n        item: dragging,\n        placeholder: placeholder,\n        startparent: startParent\n      }))\n    })\n    // Handle drag events on draggable items\n    _on(items, 'dragend', function () {\n      var newParent\n      if (!dragging) {\n        return\n      }\n      // remove dragging attributes and show item\n      dragging.classList.remove(options.draggingClass)\n      _attr(dragging, 'aria-grabbed', 'false')\n      dragging.style.display = dragging.oldDisplay\n      delete dragging.oldDisplay\n\n      placeholders.forEach(_detach)\n      newParent = this.parentElement\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstop', {\n        item: dragging,\n        startparent: startParent\n      }))\n      if (index !== _index(dragging) || startParent !== newParent) {\n        _dispatchEventOnConnected(sortableElement, _makeEvent('sortupdate', {\n          item: dragging,\n          index: _filter(_getChildren(newParent), _data(newParent, 'items'))\n              .indexOf(dragging),\n          oldindex: items.indexOf(dragging),\n          elementIndex: _index(dragging),\n          oldElementIndex: index,\n          startparent: startParent,\n          endparent: newParent,\n          newEndList: _serialize(newParent),\n          newStartList: _serialize(startParent),\n          oldStartList: startList\n        }))\n      }\n      dragging = null\n      draggingHeight = null\n    })\n    // Handle drop event on sortable & placeholder\n    // TODO: REMOVE placeholder?????\n    _on([sortableElement, placeholder], 'drop', function (e) {\n      var visiblePlaceholder\n      if (!_listsConnected(sortableElement, dragging.parentElement)) {\n        return\n      }\n\n      e.preventDefault()\n      e.stopPropagation()\n      visiblePlaceholder = placeholders.filter(_attached)[0]\n      _after(visiblePlaceholder, dragging)\n      dragging.dispatchEvent(_makeEvent('dragend'))\n    })\n\n    var debouncedDragOverEnter = _debounce(function (element, pageY) {\n      if (!dragging) {\n        return\n      }\n\n      if (items.indexOf(element) !== -1) {\n        var thisHeight = parseInt(window.getComputedStyle(element).height)\n        var placeholderIndex = _index(placeholder)\n        var thisIndex = _index(element)\n        if (options.forcePlaceholderSize) {\n          placeholder.style.height = draggingHeight + 'px'\n        }\n\n        // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n        if (thisHeight > draggingHeight) {\n          // Dead zone?\n          var deadZone = thisHeight - draggingHeight\n          var offsetTop = _offset(element).top\n          if (placeholderIndex < thisIndex &&\n              pageY < offsetTop + deadZone) {\n            return\n          }\n          if (placeholderIndex > thisIndex &&\n              pageY > offsetTop + thisHeight - deadZone) {\n            return\n          }\n        }\n\n        if (dragging.oldDisplay === undefined) {\n          dragging.oldDisplay = dragging.style.display\n        }\n\n        if (dragging.style.display !== 'none') {\n          dragging.style.display = 'none'\n        }\n\n        if (placeholderIndex < thisIndex) {\n          _after(element, placeholder)\n        } else {\n          _before(element, placeholder)\n        }\n        // Intentionally violated chaining, it is more complex otherwise\n        placeholders\n          .filter(function (element) { return element !== placeholder })\n          .forEach(_detach)\n      } else {\n        if (placeholders.indexOf(element) === -1 &&\n            !_filter(_getChildren(element), options.items).length) {\n          placeholders.forEach(_detach)\n          element.appendChild(placeholder)\n        }\n      }\n    }, options.debounce)\n\n    // Handle dragover and dragenter events on draggable items\n    var onDragOverEnter = function (e) {\n      if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || _data(sortableElement, '_disabled') === 'true') {\n        return\n      }\n      if (maxItems && _filter(_getChildren(sortableElement), _data(sortableElement, 'items')).length >= maxItems) {\n        return\n      }\n      e.preventDefault()\n      e.stopPropagation()\n      e.dataTransfer.dropEffect = 'move'\n      debouncedDragOverEnter(this, e.pageY)\n    }\n\n    _on(items.concat(sortableElement), 'dragover', onDragOverEnter)\n    _on(items.concat(sortableElement), 'dragenter', onDragOverEnter)\n  })\n\n  return sortableElements\n}\n\nsortable.destroy = function (sortableElement) {\n  _destroySortable(sortableElement)\n}\n\nsortable.enable = function (sortableElement) {\n  _enableSortable(sortableElement)\n}\n\nsortable.disable = function (sortableElement) {\n  _disableSortable(sortableElement)\n}\n\n\nreturn sortable;\n}));\n","module.exports = flarum.core.compat['tags/models/Tag'];","module.exports = flarum.core.compat['components/SplitDropdown'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['tags/helpers/tagLabel'];","module.exports = flarum.core.compat['tags/helpers/tagIcon'];","module.exports = flarum.core.compat['helpers/highlight'];","module.exports = flarum.core.compat['utils/classList'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['components/DiscussionPage'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Modal from 'flarum/components/Modal';\nimport tagLabel from 'flarum/tags/helpers/tagLabel';\nimport tagIcon from 'flarum/tags/helpers/tagIcon';\nimport highlight from 'flarum/helpers/highlight';\nimport classList from 'flarum/utils/classList';\nimport Button from \"flarum/components/Button\";\n\nexport default class AddColumnModal extends Modal {\n\n    title() {\n        return app.translator.trans('flagrow-aqueduct.forum.board.modals.add-column.title');\n    }\n    init() {\n        super.init();\n        this.for = this.props.tag;\n\n        this.tags = app.store.all('tags').filter(tag => {\n            return this.for.columns().indexOf(tag) == -1;\n        });\n\n        this.selected = m.prop('');\n        this.filter = m.prop('');\n        this.index = this.tags[0].id();\n        this.focused = false;\n    }\n\n    content() {\n        let tags = this.tags;\n        const filter = this.filter().toLowerCase();\n\n        tags = tags.filter(tag => {\n            return tag.id() != this.for.id() &&\n                (tag.position() === null || (tag.parent() && tag.parent().id() == this.for.id()));\n        })\n\n        // If the user has entered text in the filter input, then filter by tags\n        // whose name matches what they've entered.\n        if (filter) {\n            tags = tags.filter(tag => tag.name().substr(0, filter.length).toLowerCase() === filter);\n        }\n\n        return [\n          <div className=\"Modal-body\">\n            <div className=\"TagDiscussionModal-form\">\n              <div className=\"TagDiscussionModal-form-input\">\n                <div className={'TagsInput FormControl ' + (this.focused ? 'focus' : '')}>\n                  <span className=\"TagsInput-selected\">\n                    {this.selected() ?\n                            <span className=\"TagsInput-tag\" onclick={() => {\n                            this.selected('')\n                            this.onready();\n                          }}>\n                            {tagLabel(this.selected())}\n                          </span>\n                        : ''\n                    }\n                  </span>\n                  <input className=\"FormControl\"\n                    value={this.filter()}\n                    oninput={m.withAttr('value', this.filter)}\n                    onfocus={() => this.focused = true}\n                    onblur={() => this.focused = false}/>\n                </div>\n              </div>\n              <div className=\"TagDiscussionModal-form-submit App-primaryControl\">\n                {Button.component({\n                  type: 'submit',\n                  className: 'Button Button--primary',\n                  disabled: !this.selected(),\n                  icon: 'check',\n                  children: app.translator.trans('flarum-tags.forum.choose_tags.submit_button')\n                })}\n              </div>\n            </div>\n          </div>,\n\n          <div className=\"Modal-footer\">\n            <ul className=\"TagDiscussionModal-list SelectTagList\">\n              {tags\n                .filter(tag => filter || !tag.parent() || this.selected().id == tag.id())\n                .map(tag => (\n                  <li data-index={tag.id()}\n                    className={classList({\n                      pinned: tag.position() !== null,\n                      child: !!tag.parent(),\n                      colored: !!tag.color(),\n                      selected: this.selected() && this.selected().id == tag.id(),\n                      active: this.index === tag\n                    })}\n                    style={{color: tag.color()}}\n                    onmouseover={() => this.index = tag}\n                    onclick={() => this.selected(tag)}\n                  >\n                    {tagIcon(tag)}\n                    <span className=\"SelectTagListItem-name\">\n                      {highlight(tag.name(), filter)}\n                    </span>\n                    {tag.description()\n                      ? (\n                        <span className=\"SelectTagListItem-description\">\n                          {tag.description()}\n                        </span>\n                      ) : ''}\n                  </li>\n                ))}\n            </ul>\n          </div>\n        ];\n    }\n\n    className() {\n        return 'AddColumnModal';\n    }\n\n\n    onsubmit(e) {\n        e.preventDefault();\n\n        const board = this.for;\n        const column = this.selected();\n\n        app.request({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/board/' + board.slug() + '/columns/' + column.slug(),\n        }).then(results => {\n            let tag = app.store.pushPayload(results);\n\n            if (this.props.onsubmit) this.props.onsubmit(tag);\n\n            app.modal.close();\n\n            m.redraw.strategy('none');\n        });\n    }\n}\n","import Component from 'flarum/Component';\nimport ItemList from 'flarum/utils/ItemList';\nimport icon from 'flarum/helpers/icon';\nimport avatar from 'flarum/helpers/avatar';\n\nexport default class Card extends Component {\n    init() {\n        this.discussion = this.props.discussion;\n        this.isUnread = this.discussion.isUnread();\n    }\n\n    view() {\n        const jumpTo = Math.min(this.discussion.lastPostNumber(), (this.discussion.lastReadPostNumber() || 0) + 1);\n\n        return m('div', {\n            className: 'Card' + (this.isUnread ? ' Unread' : ''),\n            discussion: this.discussion.id()\n        }, m('div', {className: 'Card--Handle'}, [\n            m('div', {className: 'Card--Header'}, [\n                // Issue title.\n                m('div', {className: 'Card--Title'},\n                    <a href={app.route.discussion(this.discussion, jumpTo)}\n                       config={m.route}>\n                        {this.discussion.title()}\n                    </a>\n                )\n            ]),\n            m('div', {className: 'Card--Footer'}, this.footerControls().toArray())\n        ]))\n    }\n\n    footerControls() {\n        let items = new ItemList;\n\n        const user = this.discussion.user();\n\n        items.add('user',\n            <a href={user ? app.route.user(user) : '#'}\n              className=\"Card--Author\"\n              config={function(element) {\n                  $(element).tooltip({placement: 'right'});\n                  m.route.apply(this, arguments);\n              }}>\n            {avatar(user, {title: user.username()})}\n            <span className=\"Username\">{user.username()}</span>\n        </a>);\n\n        items.add('count', m('div', {className: 'Card--Replies-Count'}, [\n            icon(this.isUnread ? 'fas fa-comments' : 'fas fa-comment-slash'),\n            this.discussion[this.isUnread ? 'unreadCount' : 'replyCount']()\n        ]));\n\n        return items;\n    }\n}\n","import Component from 'flarum/Component';\nimport SplitDropdown from 'flarum/components/SplitDropdown';\nimport Button from 'flarum/components/Button';\nimport ItemList from 'flarum/utils/ItemList';\nimport Card from '../components/Card';\nimport sortable from \"html5sortable\";\n\n\nexport default class Column extends Component {\n    init() {\n        this.board = this.props.board;\n        this.tag = this.props.tag;\n        this.discussions = this.props.discussions;\n        this.loading = this.props.loading;\n        this.dragging = this.props.dragging;\n        this.draggingEnabled = this.props.draggable === 'cards';\n        this.tags = this.props.tags;\n        this.sorted = [];\n\n        this.$().ready(() => {\n            this.sortable();\n        });\n    }\n\n    view() {\n        const tag = this.tag;\n\n        return m('div', {\n            className: 'Board--Column ' + tag.name(),\n            slug: tag.slug()\n        }, [\n            m('div', {className: 'Board--Inner'}, [\n                m('header', {\n                    className: 'Board--Header' + (tag.color() ? ' colored' : ''),\n                    style: tag.color() ? 'border-top-color: ' + tag.color() + ';' : ''\n                }, m('h4', [\n                    tag.name(),\n                    m('span', tag.description()),\n\n                    this.controls().isEmpty() ? [] :\n                        SplitDropdown.component({\n                            children: this.controls().toArray(),\n                            icon: 'ellipsis-v',\n                            buttonClassName: 'Button'\n                        })\n                ])),\n                m('div', {\n                    className: 'Board--Item-List',\n                    slug: tag.slug()\n                }, this.loading || this.discussions.length == 0 ? '' : this.discussions.map(discussion => {\n                    return Card.component({discussion});\n                }))\n            ])\n        ]);\n    }\n\n    controls() {\n        const tag = this.tag;\n        let items = new ItemList;\n\n        if (this.props.draggable === 'columns' && this.board.canManageBoard()) {\n            items.add('remove-column', Button.component({\n                icon: 'fas fa-cog',\n                children: app.translator.trans('flagrow-aqueduct.forum.board.buttons.remove-column'),\n                onclick: () => {\n                    if (confirm(app.translator.trans('flagrow-aqueduct.forum.board.buttons.remove-column-confirmation', {tag: tag.name()}))) {\n                        this.delete();\n                    }\n                }\n            }));\n        }\n\n        return items;\n    }\n\n    sortable() {\n        if (! this.board.canUseBoard()) {\n            return;\n        }\n\n        const selector = '.Board--Item-List[slug=' + this.tag.slug() + ']';\n\n        if (!this.dragging && this.draggingEnabled && this.sorted.length === 0) {\n            this.sorted = sortable(selector, {\n                connectWith: '.Board--Item-List',\n                items: '.Card',\n                // handle: '.Card--Header',\n                placeholder: '<div class=\"Card Placeholder\"></div>',\n                forcePlaceholderSize: true\n            });\n\n            this.sorted[0].addEventListener('sortupdate', (e) => {\n                const tag = $(e.target).attr('slug');\n                // prevents updating multiple times\n                if (tag === $(e.detail.endparent).attr('slug')) {\n                    const sorting = $(e.target).find('.Card').map(function () {\n                        return $(this).attr('discussion');\n                    }).get();\n\n                    this.updateDiscussionSorting(sorting, tag);\n                }\n            });\n        } else if (this.draggingEnabled) {\n            sortable(selector);\n        }\n\n        this.dragging = (this.dragging === null && this.sorted.length > 0) || this.dragging !== null;\n    }\n\n    delete() {\n        const board = this.board;\n        const column = this.tag;\n\n        app.request({\n            method: 'DELETE',\n            url: app.forum.attribute('apiUrl') + '/board/' + board.slug() + '/columns/' + column.slug(),\n        }).then(results => {\n            this.tag = app.store.pushPayload(results);\n\n            m.redraw();\n        });\n    }\n\n    updateDiscussionSorting(sorting, slug) {\n        const tag = app.store.getBy('tags', 'slug', slug);\n\n        if (sorting.length > 0) {\n            sorting.forEach(id => {\n                const discussion = app.store.getById('discussions', id);\n                const tags = discussion.tags();\n\n                const data = {\n                    relationships: {\n                        tags: []\n                    }\n                }\n\n                // drop all tags from discussion that are part of this board as column\n                tags.forEach(t => {\n                    if (this.tags.indexOf(t) < 0 && t.id() !== tag.id()) {\n                        data.relationships.tags.push(t);\n                    }\n                })\n\n                // then re-add that tag so it can be saved\n                data.relationships.tags.push(tag);\n\n                discussion.save(data);\n            })\n        }\n    }\n}\n","import sortable from 'html5sortable';\n\nimport Page from \"flarum/components/Page\";\nimport SplitDropdown from 'flarum/components/SplitDropdown';\nimport Button from 'flarum/components/Button';\nimport ItemList from 'flarum/utils/ItemList';\nimport AddColumnModal from '../modals/AddColumnModal';\nimport Card from '../components/Card';\nimport Column from '../components/Column';\n\nexport default class Board extends Page {\n    init() {\n        super.init();\n\n        this.bodyClass = 'Kanban--Board';\n\n        this.draggable = 'cards';\n        this.dragging = null;\n\n        this.refresh(true);\n    }\n\n\n    config(isInitialized, context) {\n        super.config(...arguments);\n\n        if (isInitialized) return;\n\n        app.setTitle('');\n        app.setTitleCount(0);\n\n        this.$().ready(() => {\n            this.setDraggable();\n        });\n\n    }\n\n    view() {\n        return m('div', {\n            className: 'Board'\n        }, [\n            m('div', {\n                className: 'Board--Controls'\n            }, m('div', {className: 'container'}, [\n                Button.component({\n                    icon: 'fas fa-tag',\n                    className: 'Button',\n                    children: this.tag.name(),\n                    onclick: () => m.route('/t/' + this.tag.slug())\n                }),\n                this.controls().isEmpty() ? [] :\n                    SplitDropdown.component({\n                        children: this.controls().toArray(),\n                        icon: 'ellipsis-v',\n                        className: 'App-primaryControl',\n                        buttonClassName: 'Button--primary'\n                    }),\n                this.dragging && this.draggable === 'columns' ? [\n                    Button.component({\n                        icon: 'fas fa-lock',\n                        className: 'Button Button--danger',\n                        children: app.translator.trans('flagrow-aqueduct.forum.board.buttons.fix-columns'),\n                        onclick: () => {\n                            this.updateColumnSorting()\n\n                            this.draggable = 'cards';\n                            this.setDraggable();\n                        }\n                    })\n                ] : []\n            ])),\n            m('div', {\n                className: 'Board--List'\n            }, (this.loading ? [] : this.tags).map(tag => {\n                return Column.component({\n                    board: this.tag,\n                    tag,\n                    discussions: this.discussions[tag.slug()] || [],\n                    loading: this.loading,\n                    dragging: this.dragging,\n                    draggable: this.draggable,\n                    tags: this.tags\n                });\n            }))\n        ])\n    }\n\n    controls() {\n        let items = new ItemList;\n        let tag = this.tag;\n\n        if (tag.canManageBoard()) {\n            items.add('add-column', Button.component({\n                icon: 'fas fa-cog',\n                children: app.translator.trans('flagrow-aqueduct.forum.board.buttons.add-column'),\n                onclick: () => app.modal.show(new AddColumnModal({\n                    tag: tag,\n                    onsubmit: () => {\n                        this.refresh(true)\n                    }\n                }))\n            }));\n\n            if (this.draggable === 'cards') {\n                items.add('drag-columns', Button.component({\n                    icon: 'fas fa-lock-open',\n                    children: app.translator.trans('flagrow-aqueduct.forum.board.buttons.drag-columns'),\n                    onclick: () => {\n                        this.draggable = 'columns';\n                        this.setDraggable();\n                    }\n                }));\n            }\n        }\n\n        return items;\n    }\n\n    /**\n     * Clear and reload the discussion list.\n     *\n     * @public\n     */\n    refresh(clear = true) {\n        if (clear) {\n            this.loading = true;\n\n            // The primary tag for which we will show the board.\n            this.tag = app.store.getBy('tags', 'slug', m.route.param('tag'));\n\n            /**\n             * The discussions in the discussion list.\n             *\n             * @type {Discussion[]}\n             */\n            this.discussions = {};\n\n            this.tags = this.tag.columns() || [];\n        }\n\n        this.tags.sort((a, b) => {\n            return a.boardSort() - b.boardSort();\n        });\n\n        this.load().then(\n            results => {\n                app.store.pushPayload(results);\n\n                this.discussions = {};\n                this.parseResults(results.data);\n\n                this.setDraggable()\n            },\n            () => {\n                this.loading = false;\n                m.redraw();\n\n                this.setDraggable()\n            }\n        );\n    }\n\n    /**\n     * Parse results and append them to the discussion list.\n     *\n     * @param {Discussion[]} results\n     * @return {Discussion[]}\n     */\n    parseResults(results) {\n        this.tags.forEach(tag => {\n\n            this.discussions[tag.slug()] = [];\n\n            results.forEach(discussion => {\n                discussion = app.store.getById(discussion.type, discussion.id);\n\n                if (discussion.tags().map(tag => tag.id()).indexOf(tag.id()) != -1) {\n                    this.discussions[tag.slug()].push(discussion);\n                }\n            });\n        })\n\n        this.loading = false;\n\n        m.lazyRedraw();\n\n        return results;\n    }\n\n    /**\n     * Load discussions based on the tags.\n     */\n    load() {\n        return app.request({\n            method: 'get',\n            url: app.forum.attribute('apiUrl') + '/board/' + this.tag.slug(),\n        });\n    }\n\n    /**\n     * Listens to dragging event and updates the sorting of the columns.\n     */\n    setDraggable() {\n        if (!this.tag.canManageBoard()) {\n            return;\n        }\n\n        let sorted = [];\n\n        if (! this.dragging && this.draggable === 'columns') {\n            sorted = sortable('.Board--List', {\n                items: '.Board--Column',\n                handle: '.Board--Header',\n                placeholder: '<div class=\"Board--Column Placeholder\"></div>',\n                forcePlaceholderSize: true\n            });\n        } else if (this.draggable === 'columns') {\n            sortable('.Board--List');\n        } else {\n            sortable('.Board--List', 'destroy');\n        }\n\n        this.dragging = (this.dragging === null && sorted.length > 0) || this.dragging !== null;\n    }\n\n    updateColumnSorting() {\n        const sorting = this.$().find('.Board--Column').map(function () {\n            return $(this).attr('slug');\n        }).get();\n\n        return app.request({\n            method: 'post',\n            url: app.forum.attribute('apiUrl') + '/board/' + this.tag.slug() + '/sorting',\n            data: sorting\n        }).then(results => {\n            app.store.pushPayload(results);\n            m.redraw()\n\n            this.setDraggable()\n        })\n    }\n\n\n}\n","import {extend} from \"flarum/extend\";\nimport DiscussionPage from \"flarum/components/DiscussionPage\";\nimport Button from \"flarum/components/Button\";\nimport SplitDropdown from \"flarum/components/SplitDropdown\";\nimport ItemList from \"flarum/utils/ItemList\";\n\nexport default function () {\n\n    // Add a control allowing direct visiting of the board.\n    extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n        const discussion = this.discussion;\n        let tags = discussion.tags().filter(tag => tag.position() !== null && !tag.isChild());\n\n        let controls = new ItemList;\n\n        tags = tags.filter(tag => tag.canAccessBoard() || tag.canUseBoard() || tag.canManageBoard());\n\n        tags.forEach(tag => {\n            controls.add('board-' + tag.slug(), Button.component({\n                children: app.translator.trans('flagrow-aqueduct.forum.discussion.buttons.show-board', {tag: tag.name()}),\n                icon: 'fab fa-trello',\n                onclick: () => m.route(app.route('flagrow.kanban.board', {tag: tag.slug()}))\n            }));\n        })\n\n        if (tags.length > 0) {\n            items.add(\n                'board',\n                SplitDropdown.component({\n                    children: controls.toArray(),\n                    icon: 'fab fa-trello',\n                    className: 'App-primaryControl',\n                    buttonClassName: 'Button--secondary'\n                }),\n                -50\n            );\n        }\n    });\n}\n","import routes from './routes';\nimport addsBoardToDiscussion from './addsBoardToDiscussion';\n\nimport Model from 'flarum/Model';\nimport Tag from 'flarum/tags/models/Tag';\nimport Discussion from 'flarum/models/Discussion';\n\napp.initializers.add('flagrow-aqueduct', function(app) {\n    Tag.prototype.canAccessBoard = Model.attribute('canAccessBoard');\n    Tag.prototype.canUseBoard = Model.attribute('canUseBoard');\n    Tag.prototype.canManageBoard = Model.attribute('canManageBoard');\n    Tag.prototype.columns = Model.hasMany('columns');\n    Tag.prototype.boardSort = Model.attribute('boardSort') || null;\n    Tag.prototype.boardMaxItems = Model.attribute('boardMaxItems') || null;\n\n    Discussion.prototype.canAccessBoard = Model.attribute('canAccessBoard');\n    Discussion.prototype.canUseBoard = Model.attribute('canUseBoard');\n    Discussion.prototype.canManageBoard = Model.attribute('canManageBoard');\n    Discussion.prototype.assignedUsers = Model.hasMany('assignedUsers');\n    Discussion.prototype.assignedGroups = Model.hasMany('assignedGroups');\n\n    routes(app);\n\n    addsBoardToDiscussion();\n});\n","import Board from './pages/Board';\n\nexport default function (app) {\n    app.routes['flagrow.kanban.board'] = {path: '/board/:tag', component: Board.component()};\n}\n"],"sourceRoot":""}